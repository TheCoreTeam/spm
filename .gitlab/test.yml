---
.test_script_linux_template: &test_script_linux
  stage: test
  tags: ["large", "docker"]
  extends: .only-master-mr
  script:
    - bash .gitlab/test.sh | tee -a ${LOGNAME}.log
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    expire_in: 180 minutes
    paths:
      - ${LOGNAME}.log
      - ${LOGNAME}-junit.xml
      - spm-${VERSION}-${RUN}.lcov
    reports:
      junit: ${LOGNAME}-junit.xml

test_spm_seq_shm:
  <<: *test_script_linux
  needs: [build_spm_seq]
  variables:
    SYSTEM: linux
    VERSION: seq
    RUN: shm
    LOGNAME: "spm-test-${SYSTEM}-${VERSION}-${RUN}"
    TESTS_RESTRICTION: "-R ^shm_"

test_spm_mpi_shm:
  <<: *test_script_linux
  needs: [build_spm_mpi]
  variables:
    SYSTEM: linux
    VERSION: mpi
    RUN: shm
    LOGNAME: "spm-test-${SYSTEM}-${VERSION}-${RUN}"
    TESTS_RESTRICTION: "-R ^shm_"

test_spm_mpi_dist:
  <<: *test_script_linux
  needs: [build_spm_mpi]
  variables:
    SYSTEM: linux
    VERSION: mpi
    RUN: dist
    LOGNAME: "spm-test-${SYSTEM}-${VERSION}-${RUN}"
    TESTS_RESTRICTION: "-R ^mpi_"

test_wrapper_seq:
  <<: *test_script_linux
  needs: [build_spm_seq]
  variables:
    SYSTEM: linux
    VERSION: seq
    LOGNAME: "spm-test-${SYSTEM}-${VERSION}-${RUN}"
  parallel:
    matrix:
      - RUN: python
        TESTS_RESTRICTION: "-R ^python_"
      - RUN: fortran
        TESTS_RESTRICTION: "-R ^fortran_"
      #- RUN: julia
      #  TESTS_RESTRICTION: "-R ^julia_"
      - RUN: C
        TESTS_RESTRICTION: "-R ^c_"

test_wrapper_mpi:
  <<: *test_script_linux
  needs: [build_spm_mpi]
  variables:
    SYSTEM: linux
    VERSION: mpi
    LOGNAME: "spm-test-${SYSTEM}-${VERSION}-${RUN}"
  parallel:
    matrix:
      - RUN: python
        TESTS_RESTRICTION: "-R ^python_"
      - RUN: fortran
        TESTS_RESTRICTION: "-R ^fortran_"
      #- RUN: julia
      #  TESTS_RESTRICTION: "-R ^julia_"
      - RUN: C
        TESTS_RESTRICTION: "-R ^c_"

.test_script_macosx_template: &test_script_macosx
  stage: test
  tags: ["macosx"]
  extends: .only-master-mr
  script:
    - bash .gitlab/test.sh | tee -a ${LOGNAME}.log
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    expire_in: 180 minutes
    paths:
      - ${LOGNAME}.log
    reports:
      junit: ${LOGNAME}-junit.xml
  cache:
    key: "${SYSTEM}-${VERSION}-$CI_COMMIT_REF_SLUG"
    untracked: true
    policy: pull

test_spm_seq_shm_macosx:
  <<: *test_script_macosx
  needs: [build_spm_seq_macosx]
  variables:
    SYSTEM: macosx
    VERSION: seq
    RUN: shm
    LOGNAME: "spm-test-${SYSTEM}-${VERSION}-${RUN}"
    TESTS_RESTRICTION: "-R ^shm_"

.test_spm_mpi_dist_macosx:
  <<: *test_script_macosx
  needs: [build_spm_mpi_macosx]
  variables:
    SYSTEM: macosx
    VERSION: mpi
    RUN: dist
    LOGNAME: "${SYSTEM}-${VERSION}-${RUN}"
    TESTS_RESTRICTION: "-R ^mpi_"
  allow_failure: true

.test_script_windows_template: &test_script_windows
  stage: test
  tags: ["windows"]
  extends: .only-master-mr
  script:
    - bash -lc .gitlab/test.sh | tee -a "$env:LOGNAME.log"
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    expire_in: 180 minutes
    paths:
      - ${LOGNAME}.log
    reports:
      junit: ${LOGNAME}-junit.xml
  cache:
    key: "${SYSTEM}-${VERSION}-$CI_COMMIT_REF_SLUG"
    untracked: true
    policy: pull

test_spm_seq_shm_windows:
  <<: *test_script_windows
  needs: [build_spm_seq_windows]
  variables:
    SYSTEM: windows
    CHERE_INVOKING: "yes"
    MSYSTEM: UCRT64
    VERSION: seq
    RUN: shm
    LOGNAME: "${SYSTEM}-${VERSION}-${RUN}"
    TESTS_RESTRICTION: "-R ^shm_"
