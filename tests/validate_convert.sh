#!/usr/bin/env bash
#
#  @file validate_convert.sh
#
#  @copyright 2016-2024 Bordeaux INP, CNRS (LaBRI UMR 5800), Inria,
#                       Univ. Bordeaux. All rights reserved.
#
#  @version 1.2.4
#  @author Mathieu Faverge
#  @author Tony Delarue
#  @date 2024-05-29
#
# This script compares the output files generated by the matrix format
# conversion testings
#

# Floating point arithmetic to check
fltname=$1

# Cleanup all sorted files
rm -f *.sort

#
# Cleanup files for a single test case both in
# shared and distributed version
#
function prepare_files()
{
    local basename=$1

    # Sort the sequential file
    if [ -f convert_${basename}.dat ]
    then
        if [ ! -f convert_${basename}.sort ]
        then
            sort convert_${basename}.dat > convert_${basename}.sort
        fi
    fi

    # Gather and sort the distributed files
    if [ -f convert_dist_${basename}_0.dat ]
    then
        if [ ! -f convert_dist_${basename}.sort ]
        then
            sort convert_dist_${basename}_*.dat > convert_dist_${basename}.sort
        fi
    fi
}

#
# Check one test case (shared and distributed)
# against the initial file
#
function check_case() {
    local basefile=$1
    local baseval=$2
    local mtxtype=$3
    local fmttype=$4
    local cycle=$5
    local basename=b${baseval}_${mtxtype}_${fmttype}_${cycle}

    prepare_files $basename

    seqfile=convert_${basename}.sort
    mpifile=convert_dist_${basename}.sort

    # Compare the sequential version
    if [ -f $seqfile ]
    then
        echo -n "---- CSC VS Sequential $fmttype $cycle: "
        diff $basefile $seqfile | wc -l
    fi

    # Compare the distributed version
    if [ -f $mpifile ]
    then
        echo -n "---- CSC VS Distributed $fmttype $cycle: "
        diff $basefile $mpifile | wc -l
    fi
}

#
# Main loop over all the test cases
#
for mtxtype in General Symmetric Hermitian
do
    basename=b0_${mtxtype}_CSC_cycle1

    prepare_files $basename
    basefile=convert_${basename}.sort

    if [ -f $basefile ]
    then
        echo "-- $mtxtype -- "
        for baseval in 0 1
        do
            echo "-- baseval $baseval -- "
            for fmttype in CSC CSR IJV
            do
                for cycle in cycle1 cycle2
                do
                    check_case $basefile $baseval $mtxtype $fmttype $cycle
                done
            done

            check_case $basefile $baseval $mtxtype CSC end
        done
    fi
done
